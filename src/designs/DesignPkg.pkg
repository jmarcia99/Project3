package DesignPkg;

  enum int {FIRST_WORD, SECOND_WORD, THIRD_WORD, LAST_WORD} word_e;
  enum int {BYTE0, BYTE1, BYTE2, BYTE3} byte_e;
  
  typedef logic [7:0] byte_t;
  typedef logic [0:3][7:0] word_t;
  typedef logic [0:15][7:0] sbox_t;
  typedef logic [0:3][0:3][7:0] key_t;
  typedef logic [0:3][0:3][7:0] text_t;
  
  typedef enum logic [1:0] {
    						            RECV_KEY = 2'b00, 
    						            SEND_KEY = 2'b01,
                            XX		 = 'x		
                            } kx_fsm_e;
                            
  typedef enum logic [1:0] {
  							            RECV_TEXT 		= 2'b00,
                            ENCRYPT_TEXT	= 2'b01,
                            XXX				= 'x		
                            } cntrl_fsm_e;
                            
  typedef enum logic [1:0] {
   							            IDLE        = 2'b00,
  							            TX_START 	= 2'b01,
                        	  TX_DATA 	= 2'b10,
  							            TX_STOP  	= 2'b11, 
    						            X			= 'x			
                            } uart_tx_fsm_e;
                            
  typedef enum logic [1:0] {
                              WR_IDLE = 2'b00,        
                              WR_DATA = 2'b01,       
                              WR_RESP = 2'b10,       
                              WR_XX   = 'x
                            } axi_wr_fsm_e;
  
  typedef enum logic [1:0] {
                              RD_IDLE = 2'b00,
                              RD_DATA = 2'b01,        
                              RD_RESP = 2'b10,        
                              RD_XX   = 'x
                            } axi_rd_fsm_e;
                            
  typedef enum logic [1:0] {
                              BUFF_READ = 2'b00,
                              BUFF_WAIT = 2'b01,        
                              BUFF_SEND = 2'b10,        
                              BUFF_XX   = 'x
                            } buffer_fsm_e;
  
endpackage : DesignPkg
